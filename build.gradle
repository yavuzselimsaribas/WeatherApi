
/**
 *  NOTE: if we use plugins block, then in old versions of spring boot repackage cannot distinguish root module and
 *  tries to find a main class unless we use the buildscript version
 */
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'io.freefair.lombok' version '5.3.3.3'
}

subprojects {
	group = 'com.example'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = '17'
		targetCompatibility = '17'
	}

	repositories {
		mavenCentral()
	}


	apply plugin: 'java' // just java plugin
	apply plugin: 'java-library' // for api() to work in gradle files; which replaces compile()
	apply plugin: 'io.freefair.lombok'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management' // auto dependency resolutions for boot

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
		implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.amqp:spring-rabbit-test'
		compileOnly 'org.projectlombok:lombok:1.18.20'
		annotationProcessor 'org.projectlombok:lombok:1.18.20'
		testCompileOnly 'org.projectlombok:lombok:1.18.20'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
	}

	test {
		useJUnitPlatform()
	}
	tasks.withType(JavaCompile) { // generic encoding to prevent some problems
		options.encoding = 'UTF-8'
	}
}